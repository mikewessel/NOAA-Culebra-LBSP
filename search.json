[
  {
    "objectID": "content/acknowledgements.html",
    "href": "content/acknowledgements.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "This repo and GitHub Action was based on the tutorial by Openscapes quarto-website-tutorial by Julia Lowndes and Stefanie Butland."
  },
  {
    "objectID": "content/add-content.html",
    "href": "content/add-content.html",
    "title": "Customize",
    "section": "",
    "text": "Edit the qmd or md files in the content folder. qmd files can include code (R, Python, Julia) and lots of Quarto markdown bells and whistles (like call-outs, cross-references, auto-citations and much more).\nEach page should start with\n---\ntitle: your title\n---\nand the first header will be the 2nd level, so ##. Note, there are situations where you leave off\n---\ntitle: your title\n---\nand start the qmd file with a level header #, but if using the default title yaml (in the --- fence) is a good habit since it makes it easy for Quarto convert your qmd file to other formats (like into a presentation)."
  },
  {
    "objectID": "content/add-content.html#add-your-pages-the-project",
    "href": "content/add-content.html#add-your-pages-the-project",
    "title": "Customize",
    "section": "Add your pages the project",
    "text": "Add your pages the project\n\nAdd the files to _quarto.yml"
  },
  {
    "objectID": "content/code.html",
    "href": "content/code.html",
    "title": "Rendering with Code",
    "section": "",
    "text": "You can have code (R, Python or Julia) in your qmd file. You will need to have these installed on your local computer, but presumably you do already if you are adding code to your qmd files."
  },
  {
    "objectID": "content/code.html#modify-the-github-action",
    "href": "content/code.html#modify-the-github-action",
    "title": "Rendering with Code",
    "section": "Modify the GitHub Action",
    "text": "Modify the GitHub Action\nYou will need to change the GitHub Action in .github/workflows to install these and any needed packages in order for GitHub to be able to render your webpage. The GitHub Action install R since I used that in code.qmd. If you use Python or Julia instead, then you will need to update the GitHub Action to install those.\nIf getting the GitHub Action to work is too much hassle (and that definitely happens), you can alway render locally and publish to the gh-pages branch. If you do this, make sure to delete or rename the GitHub Action to something like\nrender-and-publish.old_yml\nso GitHub does not keep trying to run it. Nothing bad will happen if you don’t do this, but if you are not using the action (because it keeps failing), then you don’t need GitHub to run it."
  },
  {
    "objectID": "content/code.html#render-locally-and-publish-to-gh-pages-branch",
    "href": "content/code.html#render-locally-and-publish-to-gh-pages-branch",
    "title": "Rendering with Code",
    "section": "Render locally and publish to gh-pages branch",
    "text": "Render locally and publish to gh-pages branch\nTo render locally and push up to the gh-pages branch, open a terminal window and then cd to the directory with the Quarto project. Type this in the terminal:\nquarto render gh-pages"
  },
  {
    "objectID": "content/customizing.html",
    "href": "content/customizing.html",
    "title": "Customization",
    "section": "",
    "text": "Quarto allow many bells and whistles to make nice output. Read the documentation here Quarto documentation."
  },
  {
    "objectID": "content/customizing.html#examples",
    "href": "content/customizing.html#examples",
    "title": "Customization",
    "section": "Examples",
    "text": "Examples\nLooking at other people’s Quarto code is a great way to figure out how to do stuff. Most will have a link to a GitHub repo where you can see the raw code. Look for a link to edit page or see source code. This will usually be on the right. Or look for the GitHub icon somewhere.\n\nQuarto gallery\nnmfs-openscapes\nFaye lab manual\nquarto-titlepages Note the link to edit is broken. Go to repo and look in documentation directory."
  },
  {
    "objectID": "content/Near.html",
    "href": "content/Near.html",
    "title": "Nearshore",
    "section": "",
    "text": "Use the links below to access the google forms for water quality data entry"
  },
  {
    "objectID": "content/Nearshore-Datachecks.html",
    "href": "content/Nearshore-Datachecks.html",
    "title": "Nearshore-Field-Data-Checks",
    "section": "",
    "text": "Descriptive Statistics for Latest Sampling Event"
  },
  {
    "objectID": "content/Nearshore-Datachecks.html#kdpar-figure",
    "href": "content/Nearshore-Datachecks.html#kdpar-figure",
    "title": "Nearshore-Field-Data-Checks",
    "section": "KdPar Figure",
    "text": "KdPar Figure\nFigure 1 Light Attenuation Coefficient (Kd) by Site with Bottom Turbidity Line Overlay.\n\n\n\n\n\nFigure 1: Example Graphic"
  },
  {
    "objectID": "content/rendering.html",
    "href": "content/rendering.html",
    "title": "Rendering",
    "section": "",
    "text": "The repo includes a GitHub Action that will render (build) the website automatically when you make changes to the files. It will be pushed to the gh-pages branch.\nBut when you are developing your content, you will want to render it locally."
  },
  {
    "objectID": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "href": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "title": "Rendering",
    "section": "Step 1. Make sure you have a recent RStudio",
    "text": "Step 1. Make sure you have a recent RStudio\nHave you updated RStudio since about August 2022? No? Then update to a newer version of RStudio. In general, you want to keep RStudio updated and it is required to have a recent version to use Quarto."
  },
  {
    "objectID": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "href": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "title": "Rendering",
    "section": "Step 2. Clone and create RStudio project",
    "text": "Step 2. Clone and create RStudio project\nFirst, clone the repo onto your local computer. How? You can click File > New Project and then select “Version Control”. Paste in the url of the repository. That will clone the repo on to your local computer. When you make changes, you will need to push those up."
  },
  {
    "objectID": "content/rendering.html#step-3.-render-within-rstudio",
    "href": "content/rendering.html#step-3.-render-within-rstudio",
    "title": "Rendering",
    "section": "Step 3. Render within RStudio",
    "text": "Step 3. Render within RStudio\nRStudio will recognize that this is a Quarto project by the presence of the _quarto.yml file and will see the “Build” tab. Click the “Render website” button to render to the _site folder.\nPreviewing: You can either click index.html in the _site folder and specify “preview in browser” or set up RStudio to preview to the viewer panel. To do the latter, go to Tools > Global Options > R Markdown. Then select “Show output preview in: Viewer panel”."
  },
  {
    "objectID": "content/rmarkdown.html",
    "href": "content/rmarkdown.html",
    "title": "Watershed WQ Data Entry",
    "section": "",
    "text": "Use the link below “Data Entry” to access the google form for water quality data entry"
  },
  {
    "objectID": "content/Watershed-Field-Datachecks.html",
    "href": "content/Watershed-Field-Datachecks.html",
    "title": "Watershed_Fieldchecks",
    "section": "",
    "text": "Attaching package: 'googledrive'\n\n\nThe following objects are masked from 'package:googlesheets4':\n\n    request_generate, request_make\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nAttaching package: 'psych'\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8     ✔ purrr   1.0.1\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ psych::%+%()                    masks ggplot2::%+%()\n✖ psych::alpha()                  masks ggplot2::alpha()\n✖ dplyr::filter()                 masks stats::filter()\n✖ dplyr::lag()                    masks stats::lag()\n✖ googledrive::request_generate() masks googlesheets4::request_generate()\n✖ googledrive::request_make()     masks googlesheets4::request_make()\n\nAttaching package: 'rlang'\n\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nℹ Suitable tokens found in the cache, associated with these emails:\n\n• 'inferential.consulting@gmail.com'\n\n• 'wesselouki@gmail.com'\n\n  Defaulting to the first email.\n\n! Using an auto-discovered, cached token.\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n\nℹ The googlesheets4 package is using a cached token for\n  'inferential.consulting@gmail.com'.\n\n✖ Request failed [429]. Retry 1 happens in 5.7 seconds ...\n\n✔ Reading from \"Final Cabra WQ Monitoring field spreadsheet\".\n\n✔ Range 'Form Responses 4'.\nCreate Simple Summary Tables\nDo Some Plots"
  },
  {
    "objectID": "content/Watershed-Field-Datachecks.html#chla-plot",
    "href": "content/Watershed-Field-Datachecks.html#chla-plot",
    "title": "Watershed_Fieldchecks",
    "section": "Chla Plot",
    "text": "Chla Plot\nChlorophyll by site with Red Excitation line overlay.\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/watershed-lab.html",
    "href": "content/watershed-lab.html",
    "title": "Watershed_Lab_Data_Checks",
    "section": "",
    "text": "Descriptive Statistics For Latest Sampling Event\nDo Some Plots"
  },
  {
    "objectID": "content/watershed-lab.html#chla-plot",
    "href": "content/watershed-lab.html#chla-plot",
    "title": "Watershed_Lab_Data_Checks",
    "section": "Chla Plot",
    "text": "Chla Plot\nChlorophyll by site with Red Excitation line overlay."
  },
  {
    "objectID": "content/watershed-lab2.html",
    "href": "content/watershed-lab2.html",
    "title": "Watershed_Lab_Data_Checks",
    "section": "",
    "text": "Descriptive Statistics For Latest Sampling Event\nWatershed Nutrient Plot"
  },
  {
    "objectID": "content/watershed-lab2.html#nitrogen-constituents-by-site",
    "href": "content/watershed-lab2.html#nitrogen-constituents-by-site",
    "title": "Watershed_Lab_Data_Checks",
    "section": "Nitrogen Constituents by Site",
    "text": "Nitrogen Constituents by Site\n\n\n\n\n\nFecal Coliform Plot"
  },
  {
    "objectID": "content/Watershed.html",
    "href": "content/Watershed.html",
    "title": "Watershed WQ Data Entry",
    "section": "",
    "text": "Use the link below “Data Entry” to access the google form for water quality data entry"
  },
  {
    "objectID": "content/watershed_fld.html",
    "href": "content/watershed_fld.html",
    "title": "Watershed_Field_Data_Checks",
    "section": "",
    "text": "Descriptive Statistics For Latest Sampling Event\nDo Some Plots"
  },
  {
    "objectID": "content/watershed_fld.html#chla-plot",
    "href": "content/watershed_fld.html#chla-plot",
    "title": "Watershed_Field_Data_Checks",
    "section": "Chla Plot",
    "text": "Chla Plot\nChlorophyll by site with Red Excitation line overlay."
  },
  {
    "objectID": "History.html",
    "href": "History.html",
    "title": "NOAA quarto simple",
    "section": "",
    "text": "doit<-data.frame(read_sheet(“https://docs.google.com/spreadsheets/d/1O3O3QfYCOVuQg-1aztPyQRtN_W9uO2i4yToqhNFGZ1Y/edit?usp=sharing”)) is.data.frame(doit) names(doit) rename(doit,Surface_Lower_irrandiance=Surface…Lower.Apogee.sensor..Channel.B.) doit2<-doit%>% rename(Surface_Lower_irrandiance=Surface…Lower.Apogee.sensor..Channel.B., Surface_Upper_irrandiance=Surface..Upper.Apogee.sensor..Channel.A., Bottom_Upper_irrandiance =Bottom..Upper.Apogee..Channel.A., Bottom_Lower_irrandiance =Bottom…Lower.Apogee..Channel.B.)%>% mutate(Normalized_KdPAR=abs(log((Surface_Lower_irrandiance/Surface_Upper_irrandiance)/(Bottom_Lower_irrandiance/Bottom_Upper_irrandiance)))) #counts ggplot(doit2, aes(Site.ID)) + geom_bar() #values ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR)) #| label: fig-airquality #| fig-cap: Temperature and ozone level. #| warning: false #| echo: false library(googlesheets4) library(googledrive) library(ggplot2) library(dplyr) doit<-data.frame(read_sheet(“https://docs.google.com/spreadsheets/d/1O3O3QfYCOVuQg-1aztPyQRtN_W9uO2i4yToqhNFGZ1Y/edit?usp=sharing”)) is.data.frame(doit) names(doit) doit2<-doit%>% rename(Surface_Lower_irrandiance=Surface…Lower.Apogee.sensor..Channel.B., Surface_Upper_irrandiance=Surface..Upper.Apogee.sensor..Channel.A., Bottom_Upper_irrandiance =Bottom..Upper.Apogee..Channel.A., Bottom_Lower_irrandiance =Bottom…Lower.Apogee..Channel.B.)%>% mutate(Normalized_KdPAR=abs(log((Surface_Lower_irrandiance/Surface_Upper_irrandiance)/(Bottom_Lower_irrandiance/Bottom_Upper_irrandiance)))) #counts ggplot(doit2, aes(Site.ID)) + geom_bar() ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID, y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(name = “Turbidity”)+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID, y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~.*10, name = “Turbidity”)+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID, y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./.10, name = “Turbidity”)+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))) View(doit2) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID, y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + # scale_y_continuous(sec.axis = sec_axis(~./.10, name = “Turbidity”)+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID, y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID, y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Turbidity”)+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom.Turbidity..NTU.”)+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID)) + geom_bar()+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “response2”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./5, name = “response2”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./5, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“black”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“black”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR)) Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“black”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“black”) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“black”) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID), y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID),y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=as.numeric(Site.ID),y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR),stat = “identity” )+ geom_line(aes(x=as.numeric(Site.ID),y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_line(aes(x=as.numeric(Site.ID),y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./2, name = “Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+ ylab(“Normalized KdPAR) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=”red”,group = 1 ) + Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom Turbidity”)) + ylab(“Normalized KdPAR”) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+ Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+ Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ ylab(“Normalized KdPAR”) + geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd library(googlesheets4) library(googledrive) library(ggplot2) library(dplyr) doit<-data.frame(read_sheet(“https://docs.google.com/spreadsheets/d/1O3O3QfYCOVuQg-1aztPyQRtN_W9uO2i4yToqhNFGZ1Y/edit?usp=sharing”)) is.data.frame(doit) #names(doit) doit2<-doit%>% rename(Surface_Lower_irrandiance=Surface…Lower.Apogee.sensor..Channel.B., Surface_Upper_irrandiance=Surface..Upper.Apogee.sensor..Channel.A., Bottom_Upper_irrandiance =Bottom..Upper.Apogee..Channel.A., Bottom_Lower_irrandiance =Bottom…Lower.Apogee..Channel.B.)%>% mutate(Normalized_KdPAR=abs(log((Surface_Lower_irrandiance/Surface_Upper_irrandiance)/(Bottom_Lower_irrandiance/Bottom_Upper_irrandiance)))) Kd<-ggplot(doit2, aes(Site.ID))+ geom_bar(aes(weight = Normalized_KdPAR))+ ylab(“Normalized KdPAR”) + geom_line(aes(x=Site.ID,y=Bottom.Turbidity..NTU.),size = 1.5, color=“red”,group = 1 ) + scale_y_continuous(sec.axis = sec_axis(~./1, name = “Bottom Turbidity”)) + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) Kd ggplot(doit2, aes(Site.ID)) + geom_bar()+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggplot(doit2, aes(Site.ID)) + geom_bar()+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) savehistory(“C:/Wessel/Git_projects/NOAA-Culebra-LBSP/History.qmd”)"
  },
  {
    "objectID": "index - Copy.html",
    "href": "index - Copy.html",
    "title": "NOAA quarto simple with R",
    "section": "",
    "text": "This is a template for a simple Quarto website that looks like a “book”. This is a common format for documentation. It includes a GitHub Action that will build the website automatically when you make changes to the files. The NOAA palette and fonts has been added to theme.scss. The webpage will be on the gh-pages branch. Serving the website files from this branch is a common way to keep all the website files from cluttering your main branch.\nThe GitHub Action installs R so you can have R code in your qmd or Rmd files. Note, you do not need to make changes to your Rmd files unless your need Quarto features like cross-references."
  },
  {
    "objectID": "index - Copy.html#github-set-up",
    "href": "index - Copy.html#github-set-up",
    "title": "NOAA quarto simple with R",
    "section": "GitHub Set-up",
    "text": "GitHub Set-up\n\nClick the green “use template” button to make a repository with this content. Make sure to make your repo public (since GitHub Pages doesn’t work on private repos unless you have a paid account) and check box to include all the branches (so that you get the gh-pages branch). \nTurn on GitHub Pages under Settings > Pages . You will set pages to be made from the gh-pages branch and root directory. \nTurn on GitHub Actions under Settings > Actions > General \nEdit the repo description and Readme to add a link to the webpage. When you edit the description, you will see the link url in the url box or you can click on the Actions tab or the Settings > Pages page to find the url."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Culebra LBSP",
    "section": "",
    "text": "This site provides links and instructions for using Google Forms to enter water quality data for both the “Nearshore” and “Watershed” components of NOAA’s Ridge to Reef monitoring program in Culebra, Puerto Rico."
  },
  {
    "objectID": "index.html#instructions",
    "href": "index.html#instructions",
    "title": "Culebra LBSP",
    "section": "Instructions",
    "text": "Instructions\n\nStep 1: Print datasheets for sampling each month. The file in the link provided at the end of this paragraph contains datasheets for both the sonde measurements as well and the laboratory nutrients and bacteriological sampling.\n\nThere are 8 sites in the Watershed sampling components that are to be sampled monthly so print 8 copies of the datasheets using the following link Watershed Datasheets\nThere are 13 sites in the Nearshore sampling components that are to be sampled monthly so print 13 copies of the datasheets using the following link Nearshore Datasheets\n\nStep 2: Collect samples and record information on datasheets. Be sure to have a cooler with ice and place all water samples (both nutrients and bacterial samples) on ice. Write site name (or abbreviation), date and time on collected water samples. Eureka Sonde samples should be measured in the watercourse if possible, and if not, in a large plastic bucket. Be sure to rinse equipment after each sample with DI water. Consult workplans in the following folder for more detailed instructions on sample collection Work Plans\nStep 3: Process Nutrient and Bacteriological samples\nStep 4: Enter data using this data entry portal. The tabs on the left contain links to Google Forms that should be used for entering data. Do not use the spreadsheets to enter data, use the Google Forms. The spreadsheet links should be used only to check that the data are entered correctly and to correct any errors."
  },
  {
    "objectID": "Nearshore Datachecks.html",
    "href": "Nearshore Datachecks.html",
    "title": "Nearshore_Datachecks",
    "section": "",
    "text": "rm(list = ls())\nCreate Simple Summary Tables\nDo Some Plots"
  },
  {
    "objectID": "Nearshore Datachecks.html#par-figure",
    "href": "Nearshore Datachecks.html#par-figure",
    "title": "Nearshore_Datachecks",
    "section": "PAr Figure",
    "text": "PAr Figure\nFigure 1 Light Attenuation by Site with Bottom Turbidity line overlay.\n\n\n\n\n\nFigure 1: Sample Counts."
  },
  {
    "objectID": "Nearshore-Datachecks.html",
    "href": "Nearshore-Datachecks.html",
    "title": "Nearshore_Datachecks",
    "section": "",
    "text": "Create Simple Summary Tables\nDo Some Plots"
  },
  {
    "objectID": "Nearshore-Datachecks.html#par-figure",
    "href": "Nearshore-Datachecks.html#par-figure",
    "title": "Nearshore_Datachecks",
    "section": "Par Figure",
    "text": "Par Figure\n?@fig-Light Light Attenuation by Site with Bottom Turbidity line overlay."
  },
  {
    "objectID": "Watershed-Field-Datachecks.html",
    "href": "Watershed-Field-Datachecks.html",
    "title": "Watershed_Fieldchecks",
    "section": "",
    "text": "Attaching package: 'googledrive'\n\n\nThe following objects are masked from 'package:googlesheets4':\n\n    request_generate, request_make\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nAttaching package: 'psych'\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8     ✔ purrr   1.0.1\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ psych::%+%()                    masks ggplot2::%+%()\n✖ psych::alpha()                  masks ggplot2::alpha()\n✖ dplyr::filter()                 masks stats::filter()\n✖ dplyr::lag()                    masks stats::lag()\n✖ googledrive::request_generate() masks googlesheets4::request_generate()\n✖ googledrive::request_make()     masks googlesheets4::request_make()\n\nAttaching package: 'rlang'\n\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nℹ Suitable tokens found in the cache, associated with these emails:\n\n• 'inferential.consulting@gmail.com'\n\n• 'wesselouki@gmail.com'\n\n  Defaulting to the first email.\n\n! Using an auto-discovered, cached token.\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n\nℹ The googlesheets4 package is using a cached token for\n  'inferential.consulting@gmail.com'.\n\n✔ Reading from \"Final Cabra WQ Monitoring field spreadsheet\".\n\n✔ Range 'Form Responses 4'.\nCreate Simple Summary Tables\nDo Some Plots"
  },
  {
    "objectID": "Watershed-Field-Datachecks.html#chla-plot",
    "href": "Watershed-Field-Datachecks.html#chla-plot",
    "title": "Watershed_Fieldchecks",
    "section": "Chla Plot",
    "text": "Chla Plot\nChlorophyll by site with Red Excitation line overlay.\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Watershed.html",
    "href": "Watershed.html",
    "title": "Watershed WQ Data Entry",
    "section": "",
    "text": "Use the link below “Data Entry” to access the google form for water quality data entry"
  }
]